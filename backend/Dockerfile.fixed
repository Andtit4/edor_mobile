# Dockerfile corrigé pour les permissions
FROM node:18-alpine

# Installer les dépendances système nécessaires
RUN apk add --no-cache \
    curl \
    python3 \
    make \
    g++ \
    gcc \
    libc-dev \
    linux-headers \
    && rm -rf /var/cache/apk/*

# Définir le répertoire de travail
WORKDIR /app

# Copier les fichiers package.json et package-lock.json
COPY package*.json ./

# Installer toutes les dépendances
RUN npm ci --only=production=false

# Vérifier l'installation des modules critiques
RUN npm list mysql2 typeorm @nestjs/typeorm

# Copier le code source
COPY . .

# Compiler l'application
RUN npm run build

# Vérifier que la compilation a réussi
RUN ls -la dist/ && test -f dist/main.js

# Nettoyer les devDependencies mais garder les dépendances de production
RUN npm prune --production

# Vérifier que les modules de production sont toujours présents
RUN npm list mysql2 typeorm @nestjs/typeorm

# Créer un utilisateur non-root pour la sécurité
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nestjs -u 1001 -G nodejs

# Créer les dossiers nécessaires AVANT de changer d'utilisateur
RUN mkdir -p uploads/profiles uploads/service-requests logs

# Changer la propriété des fichiers et dossiers
RUN chown -R nestjs:nodejs /app

# Exposer le port 8090
EXPOSE 8090

# Changer vers l'utilisateur non-root
USER nestjs

# Commande pour démarrer l'application
CMD ["node", "dist/main.js"]
