// Script pour mettre √† jour les prestataires existants avec "G√©n√©ral" comme cat√©gorie
const mysql = require('mysql2/promise');

async function updateExistingPrestataires() {
    const connection = await mysql.createConnection({
        host: '185.97.146.99',
        port: 8081,
        user: 'root',
        password: 'mot_de_passe_root',
        database: 'edor_mobile'
    });

    try {
        console.log('üîç Connexion √† la base de donn√©es...');

        // V√©rifier les prestataires avec "G√©n√©ral" comme cat√©gorie
        const [prestataires] = await connection.execute(
            'SELECT id, name, category, location FROM prestataires WHERE category = "G√©n√©ral"'
        );

        console.log(`üìä ${prestataires.length} prestataires trouv√©s avec la cat√©gorie "G√©n√©ral"`);

        if (prestataires.length === 0) {
            console.log('‚úÖ Aucun prestataire √† mettre √† jour');
            return;
        }

        // Cat√©gories disponibles
        const categories = [
            'menage',
            'plomberie', 
            'electricite',
            'bricolage',
            'jardinage',
            'transport',
            'cuisine',
            'beaute',
            'peinture',
            'climatisation',
            'securite',
            'autre'
        ];

        // Mettre √† jour chaque prestataire
        for (let i = 0; i < prestataires.length; i++) {
            const prestataire = prestataires[i];
            
            // Assigner une cat√©gorie bas√©e sur l'index (pour la d√©mo)
            // En production, vous pourriez analyser le nom ou la description
            const newCategory = categories[i % categories.length];
            
            await connection.execute(
                'UPDATE prestataires SET category = ? WHERE id = ?', 
                [newCategory, prestataire.id]
            );
            
            console.log(`‚úÖ Prestataire ${prestataire.name} mis √† jour: "G√©n√©ral" ‚Üí "${newCategory}"`);
        }

        // V√©rifier les r√©sultats
        const [updatedPrestataires] = await connection.execute(
            'SELECT id, name, category, location FROM prestataires ORDER BY category'
        );

        console.log('\nüìä Prestataires mis √† jour:');
        updatedPrestataires.forEach(p => {
            console.log(`   - ${p.name}: ${p.category} (${p.location})`);
        });

        // Statistiques par cat√©gorie
        const [stats] = await connection.execute(
            'SELECT category, COUNT(*) as count FROM prestataires GROUP BY category ORDER BY count DESC'
        );

        console.log('\nüìà Statistiques par cat√©gorie:');
        stats.forEach(stat => {
            console.log(`   - ${stat.category}: ${stat.count} prestataire(s)`);
        });

    } catch (error) {
        console.error('‚ùå Erreur:', error);
    } finally {
        await connection.end();
    }
}

updateExistingPrestataires();




