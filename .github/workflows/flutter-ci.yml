name: Flutter CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test and Build
    runs-on: ubuntu-latest

    steps:
    # Checkout du code
    - name: Checkout code
      uses: actions/checkout@v4

    # Configuration de Java (requis pour Flutter)
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    # Installation de Flutter
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.28.0'
        channel: 'stable'
        cache: true

    # Vérification de l'installation Flutter
    - name: Verify Flutter installation
      run: |
        flutter --version
        flutter doctor -v

    # Installation des dépendances
    - name: Install dependencies
      run: flutter pub get

    # Génération du code (freezed, json_serializable)
    - name: Generate code
      run: dart run build_runner build --delete-conflicting-outputs

    # Vérification du formatage
    - name: Check formatting
      run: dart format --output=none --set-exit-if-changed .

    # Analyse statique du code
    - name: Analyze code
      run: flutter analyze

    # Exécution des tests
    - name: Run tests
      run: flutter test --coverage

    # Upload de la couverture de code (optionnel)
    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v4
      with:
        file: coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    # Build Android (debug)
    - name: Build Android APK
      run: flutter build apk --debug

    # Build Android (release) - optionnel
    - name: Build Android Release
      if: github.ref == 'refs/heads/main'
      run: flutter build apk --release

    # Upload des artefacts
    - name: Upload APK artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/*.apk
        retention-days: 7

  security:
    name: Security Analysis
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Analyse de sécurité des dépendances
    - name: Run dependency security audit
      run: |
        # Vérification des vulnérabilités dans pubspec.yaml
        # Note: Dart n'a pas d'équivalent direct à npm audit
        # On pourrait utiliser des outils tiers ici
        echo "Checking for known security issues..."
        
    # Vérification des secrets dans le code (optionnel)
    - name: Check for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD

  notification:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [test, security]
    if: always()

    steps:
    - name: Notify success
      if: needs.test.result == 'success' && needs.security.result == 'success'
      run: |
        echo "✅ All checks passed successfully!"
        
    - name: Notify failure
      if: needs.test.result == 'failure' || needs.security.result == 'failure'
      run: |
        echo "❌ Some checks failed. Please review the errors above."
        exit 1
